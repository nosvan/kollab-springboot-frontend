generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_POSGRESQL_URL")
}

model user {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  item_permissions item_permission[]
  list_permissions list_permission[]
}

model list {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  owner_id    Int
  passcode    String
  created_at  DateTime @default(now())
  list_permissions list_permission[]
  items       item[]
}

model list_permission {
  id         Int      @id @default(autoincrement())
  list       list     @relation(fields: [list_id], references: [id], onDelete: Cascade)
  list_id    Int
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  permission AccessLevel @default(public)
  created_at DateTime @default(now())
  @@unique([list_id, user_id])
}

model item {
  id                      Int @id @default(autoincrement())
  name                    String
  description             String?
  category                Category?
  list                    list? @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id             Int?
  item_type               ItemType @default(general)
  date_tz_sensitive       DateTime?
  date_tz_sensitive_end   DateTime?
  time_sensitive_flag     Boolean @default(false)
  date_range_flag         Boolean @default(false)
  date_tz_insensitive     String?
  date_tz_insensitive_end String?
  permission_level        VisibilityLevel @default(public)
  created_by_id           Int
  last_modified_by_id     Int
  created_at              DateTime @default(now())
  item_permissions        item_permission[]
  active                  Boolean @default(true)
}

model item_permission {
  id           Int      @id @default(autoincrement())
  item         item     @relation(fields: [item_id], references: [id], onDelete: Cascade)
  item_id      Int
  user         user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id      Int
  created_at   DateTime @default(now())
  @@unique([item_id, user_id])
}

enum ItemType {
  assignment
  note
  project
  reminder
  meeting
  test
  general
}

enum AccessLevel {
  admin
  public
}

enum VisibilityLevel {
  private
  public
}

enum Category {
  list
}