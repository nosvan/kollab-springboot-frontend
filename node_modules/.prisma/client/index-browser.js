
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.10.1
 * Query Engine version: aead147aa326ccb985dcfed5b065b4fdabd44b19
 */
Prisma.prismaVersion = {
  client: "4.10.1",
  engine: "aead147aa326ccb985dcfed5b065b4fdabd44b19"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.ItemScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  description: 'description',
  category: 'category',
  category_id: 'category_id',
  item_type: 'item_type',
  date_tz_sensitive: 'date_tz_sensitive',
  date_tz_sensitive_end: 'date_tz_sensitive_end',
  time_sensitive_flag: 'time_sensitive_flag',
  date_range_flag: 'date_range_flag',
  date_tz_insensitive: 'date_tz_insensitive',
  date_tz_insensitive_end: 'date_tz_insensitive_end',
  permission_level: 'permission_level',
  created_by_id: 'created_by_id',
  last_modified_by_id: 'last_modified_by_id',
  created_at: 'created_at',
  active: 'active'
});

exports.Prisma.Item_permissionScalarFieldEnum = makeEnum({
  id: 'id',
  item_id: 'item_id',
  user_id: 'user_id',
  created_at: 'created_at'
});

exports.Prisma.ListScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  description: 'description',
  owner_id: 'owner_id',
  passcode: 'passcode',
  created_at: 'created_at'
});

exports.Prisma.List_permissionScalarFieldEnum = makeEnum({
  id: 'id',
  list_id: 'list_id',
  user_id: 'user_id',
  permission: 'permission',
  created_at: 'created_at'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  password: 'password',
  created_at: 'created_at'
});
exports.AccessLevel = makeEnum({
  admin: 'admin',
  public: 'public'
});

exports.Category = makeEnum({
  list: 'list'
});

exports.ItemType = makeEnum({
  assignment: 'assignment',
  note: 'note',
  project: 'project',
  reminder: 'reminder',
  meeting: 'meeting',
  test: 'test',
  general: 'general'
});

exports.VisibilityLevel = makeEnum({
  private: 'private',
  public: 'public'
});

exports.Prisma.ModelName = makeEnum({
  user: 'user',
  list: 'list',
  list_permission: 'list_permission',
  item: 'item',
  item_permission: 'item_permission'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
